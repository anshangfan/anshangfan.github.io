[{"title":"Java中计算程序运行耗时的方法比较","date":"2018-03-08T07:10:44.000Z","path":"2018/03/08/Java中计算程序运行耗时的方法对比/","text":"Java中测试程序代码运行时间的方式有两种： 第一种：以毫秒为单位计算的。 1long startTime=System.currentTimeMillis(); //下面是一些测试代码 1234567891011long startTime=System.currentTimeMillis();for(int i=0;i&lt;10000;i++)&#123;System.out.println(\"当前是：\"+i);&#125;long endTime=System.currentTimeMillis();System.out.println(\"当前程序耗时：\"+（endTime-startTime）+\"ms\"); 第二种：以纳秒为单位计算的。 1long startTime=System.nanoTime(); //下面是一些测试代码 1234567891011long startTime=System.nanoTime();for(int i=0;i&lt;10000;i++)&#123;System.out.println(\"当前是：\"+i);&#125;long endTime=System.nanoTime();System.out.println(\"当前程序耗时：\"+（endTime-startTime）+\"ns\"); 测试程序如果需要高精确时间，一般会选择第二种， 测试程序如果需要一般精确时间，一般会选择第一种， 时间换算： 1小时=60分钟 1分钟=60秒 1秒=1000毫秒 1毫秒=1000微秒 1微秒=1000纳秒 1纳秒=1000皮秒","tags":[{"name":"java","slug":"java","permalink":"http://anshangfan.github.io/tags/java/"}]},{"title":"九九乘法表","date":"2018-03-07T03:04:53.000Z","path":"2018/03/07/九九乘法表/","text":"1.用for循环写 123456789101112public class multiplication&#123; public static void mian (String args[])&#123; for(int x=1;x&lt;10;x++) &#123; for(int y=1;y&lt;=x;y++) &#123; System.out.print(x+\"*\"+y+\"=\"+(x*y)+\"\\t\"); if (x==y) &#123; System.out.println(); &#125; &#125; &#125; &#125; &#125; 2.用while循环写 12345678910111213public class multiplication&#123; public static void main(String[] args) &#123; int x = 0; while (++x &lt; 10) &#123; int y = 0; while (++y &lt;= x) &#123; System.out.print(x + \"*\" + y + \"=\" + (x*y) + \"\\t\"); &#125; System.out.println(); &#125; &#125; &#125; 3.用do….while循环写 123456789101112131415public class multiplication &#123; public static void main(String[] args) &#123; int x=1,y=1; do&#123; y=1; System.out.println(); do&#123; System.out.print(\" \"+y+\"*\"+x+\"=\"+(x*y)); y++; &#125; while(y&lt;=x); x++; &#125; while(x&lt;10); &#125; &#125;","tags":[{"name":"java","slug":"java","permalink":"http://anshangfan.github.io/tags/java/"}]},{"title":"用hexo在github上创建博客（mac版）","date":"2018-03-06T17:33:07.000Z","path":"2018/03/07/用hexo在github上创建博客（mac版）/","text":"1.下载安装nodejs 12 检查是否安装完成：node -v 2.下载安装git 12 检查是否成功安装： git —-version 3.打开终端 输入 sudu npm install -g hexo 安装hexo 12 若失败则用以下语句sudo npm install --unsafe-perm --verbose -g hexo 4.创建一个文件夹，取名 blog 1终端中可输入 mkdir blog 5.在终端进入文件夹blog目录 12输入 hexo init 初始化博客输入 hexo s 将给的网址在浏览器中打开，会发现有一个博客框架 ，终端中用ctrl +c退出 6.github配置 123456789​ 1.注册github账号，并登陆​ 2.获取本机的ssh口令 在终端输入 git config --global user.name “github用户名” git config --global user.email “github邮箱” ssh-keygen -t rsa -C “github邮箱”​ 3.将生成的id_rsa.pub文件内容复制​ 4.复制的内容添加到github上的ssh内 5.创建新库 将二级域名改为 用户名.github.io格式 7.在blog文件夹下的_config.yml做如下修改 1234type: gitrepository: 写自己库的地址brach: master注意： 冒号后面要保留一个空格，不然运行会报错 8.在终端上传博客 12341.输入 npm install hexo-deployer-git –save2.输入 hexo g 生成静态文件 3.hexo s 启动服务器(本地服务器)通常网址为http://localhost:4000/ 可在该网址查看效果4.hexo d 文件生成 后立即部署网站 至此，一个简单的博客就搭建完成了！","tags":[{"name":"博客","slug":"博客","permalink":"http://anshangfan.github.io/tags/博客/"}]},{"title":"Hello World","date":"2018-03-06T16:36:25.000Z","path":"2018/03/07/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[{"name":"博客","slug":"博客","permalink":"http://anshangfan.github.io/tags/博客/"}]}]